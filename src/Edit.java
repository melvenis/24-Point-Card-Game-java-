package project3;

import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;


/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *Class  Edit
 * File Edit.java
 * Description  Edits existing Player in the database
 *  @author        Mel Leggett
 * Date             03/06/2017
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class Edit extends javax.swing.JDialog {
    private Player player;
    private ArrayList<Player> players;
    private int index; //location of player object in the players list

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method           Edit
     * Description     constructs form, adds effects to display
     * @author          Mel Leggett
     * Date                03/06/2017
     * @see               java.awt.Toolkit
     * @param parent the form that called this form, where to return after closing this form, PlayerData
     * @param modal pause or allow the form to continue in the background, in this case true
     * @param players the database list of all the player objects
     * @param index the index of where the current Player object to be edited is stored in the players list.
     *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public Edit(java.awt.Dialog parent, boolean modal, ArrayList<Player> players, int index) {
        super(parent, modal);
        //builds form
        initComponents();
        //set addButton as default
        this.getRootPane().setDefaultButton(saveJButton); 
        //set icon
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/images/icon.png"));
        //center form
        this.setLocationRelativeTo(null);    
        //titles form
        this.setTitle("Edit Existing Player");
        //sets the List to the database List
        this.players = players;
        //sets index to class level index
        this.index = index;
        //sets player to the player to be edited
        player = players.get(index);
        //sets player Label to player's name
        playerJLabel.setText(player.getName());
        populateFields();
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * populateFields()
     * Description fills the fields with the data contained in the Player object
     *                    Only name is editable, but the statistics can be reset to zero
     * date 03/06/2017
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void populateFields() {
        //populate the player fields with the current Player's information for editing
        nameJTextField.setText(player.getName());
        totalJTextField.setText(String.valueOf(player.getGamesPlayed()));
        wonJTextField.setText(String.valueOf(player.getGamesWon()));
        streakJTextField.setText(String.valueOf(player.getRecordStreak()));
        fastJTextField.setText(String.valueOf(player.getRecordSpeed()));
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *  Method updatePlayer()
     * Description Ensures the Player's name is not null as well as not already an
     *                     existing name in the database.  If so warn user and allow another
     *                      attempt, otherwise, update the player and exit.
     * @return editError boolean of whether edit was succesful or not
     * Date 03/06/2017
     *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public boolean updatePlayer() {
        boolean editError = false;
        if(nameJTextField.getText().trim().isEmpty()) {
            Exceptions.nullName();
            editError = true;
        }
        else { //name is not null, search for name in database
            for(int i = 0; i < players.size(); i++) {
                if(nameJTextField.getText().equalsIgnoreCase(players.get(i).getName())) {
                   Exceptions.duplicateEntry(players.get(i).getName());
                    editError = true;
                }
            }
        }
        return editError;
    }

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method editPlayer()
     * Description returns the player that was edited
     * @return player the newly edited player
     * Date 03/06/2017
      *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public Player editPlayer() {
        return player;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        totalJLabel = new javax.swing.JLabel();
        wonJLabel = new javax.swing.JLabel();
        streakJLabel = new javax.swing.JLabel();
        fastJJLabel = new javax.swing.JLabel();
        inputJPanel = new javax.swing.JPanel();
        nameJTextField = new javax.swing.JTextField();
        totalJTextField = new javax.swing.JTextField();
        wonJTextField = new javax.swing.JTextField();
        streakJTextField = new javax.swing.JTextField();
        fastJTextField = new javax.swing.JTextField();
        buttonJPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        resetJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();
        headingJPanel = new javax.swing.JPanel();
        iconJLabel = new javax.swing.JLabel();
        editJLabel = new javax.swing.JLabel();
        playerJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelJPanel.setBackground(new java.awt.Color(204, 204, 255));
        labelJPanel.setLayout(new java.awt.GridLayout(5, 0));

        nameJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameJLabel.setText("Name:   ");
        labelJPanel.add(nameJLabel);

        totalJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        totalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalJLabel.setText("Total Games Played:  ");
        labelJPanel.add(totalJLabel);

        wonJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        wonJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wonJLabel.setText("Games Won:  ");
        labelJPanel.add(wonJLabel);

        streakJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        streakJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        streakJLabel.setText("Longest Win Streak:  ");
        labelJPanel.add(streakJLabel);

        fastJJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fastJJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fastJJLabel.setText("Quickest Solution:  ");
        labelJPanel.add(fastJJLabel);

        inputJPanel.setBackground(new java.awt.Color(204, 204, 255));
        inputJPanel.setLayout(new java.awt.GridLayout(5, 0));

        nameJTextField.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        nameJTextField.setToolTipText("Player Name");
        inputJPanel.add(nameJTextField);

        totalJTextField.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        totalJTextField.setToolTipText("Total games played lifetime");
        totalJTextField.setEnabled(false);
        inputJPanel.add(totalJTextField);

        wonJTextField.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        wonJTextField.setToolTipText("Total games won lifetime");
        wonJTextField.setEnabled(false);
        inputJPanel.add(wonJTextField);

        streakJTextField.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        streakJTextField.setToolTipText("Most wins in a row");
        streakJTextField.setEnabled(false);
        inputJPanel.add(streakJTextField);

        fastJTextField.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        fastJTextField.setToolTipText("Record time for fastest solution");
        fastJTextField.setEnabled(false);
        inputJPanel.add(fastJTextField);

        buttonJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonJPanel.setLayout(new java.awt.GridLayout(1, 0));

        saveJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        saveJButton.setMnemonic('s');
        saveJButton.setText("Save");
        saveJButton.setToolTipText("Update the player information");
        saveJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(saveJButton);

        resetJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        resetJButton.setMnemonic('r');
        resetJButton.setText("Reset");
        resetJButton.setToolTipText("Resets the Player Statistics");
        resetJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(resetJButton);

        cancelJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelJButton.setMnemonic('c');
        cancelJButton.setText("Cancel");
        cancelJButton.setToolTipText("Cancel the update");
        cancelJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(cancelJButton);

        headingJPanel.setBackground(new java.awt.Color(204, 204, 255));

        iconJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon.png"))); // NOI18N

        editJLabel.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        editJLabel.setText("~ Edit Player ~");

        playerJLabel.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        playerJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerJLabel.setText("Player");

        javax.swing.GroupLayout headingJPanelLayout = new javax.swing.GroupLayout(headingJPanel);
        headingJPanel.setLayout(headingJPanelLayout);
        headingJPanelLayout.setHorizontalGroup(
            headingJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headingJPanelLayout.createSequentialGroup()
                .addComponent(iconJLabel)
                .addGroup(headingJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headingJPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(editJLabel)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headingJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(playerJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        headingJPanelLayout.setVerticalGroup(
            headingJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headingJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerJLabel)
                .addGap(43, 43, 43))
            .addComponent(iconJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(inputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(buttonJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(headingJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headingJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addComponent(labelJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(buttonJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * AddJButtonActionPerformed
     * Description the user clicked Add to add a new parcel, validate all fields, tell the user if the
     * fields are improperly filled, otherwise, proceed to the buildParcel() method to build the object
     * @param evt the AddJButton was clicked
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        //remove the current player from the ArrayList to avoid tripping up the duplication check
        //if the players name was unchanged
        players.remove(player);
        if(!updatePlayer()) { //new name is valid, proceed
            player.setName(nameJTextField.getText()); //update name
            players.add(player); //add updated player back to the players list
            this.dispose(); //close form
        }
        else { //new name is a duplicate and invalid, inform user
            players.add(player);//replace player to the players list
        }
            
    }//GEN-LAST:event_saveJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * clearJButtonActionPerformed
     * Description clears all the fields
     * @param evt the clearJButton clicked
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJButtonActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to reset "
                + "all of your player statistics?  This cannot be undone.", "Reset All Statistics",
                JOptionPane.YES_NO_OPTION);
        //if confirmed set player to a new player object retaining only the name and replace in the list
        if(confirm == JOptionPane.YES_OPTION) { 
            player = new Player(player.getName());
            //replace existing player with reset statistics player
            players.set(index, player);
            populateFields();
        }
    }//GEN-LAST:event_resetJButtonActionPerformed

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        //abort, go back to PlayerData
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonJPanel;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JLabel editJLabel;
    private javax.swing.JLabel fastJJLabel;
    private javax.swing.JTextField fastJTextField;
    private javax.swing.JPanel headingJPanel;
    private javax.swing.JLabel iconJLabel;
    private javax.swing.JPanel inputJPanel;
    private javax.swing.JPanel labelJPanel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel playerJLabel;
    private javax.swing.JButton resetJButton;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel streakJLabel;
    private javax.swing.JTextField streakJTextField;
    private javax.swing.JLabel totalJLabel;
    private javax.swing.JTextField totalJTextField;
    private javax.swing.JLabel wonJLabel;
    private javax.swing.JTextField wonJTextField;
    // End of variables declaration//GEN-END:variables
}
