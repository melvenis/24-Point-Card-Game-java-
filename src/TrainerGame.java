package project3;

import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Class:            TrainerGame
 * File:              TrainerGame.java
 * Description:     JDialoug pop-up that allows the user to input any number for the
 *                          4 cards, (1-13) and then fetch all possible solutions for the 24 point card game
 *                          Solutions will be displayed in a local JList
 * @author        Mel Leggett
 * Environment:   PC, Windows 10, jdk 1.8, NetBeans 8.2
 * Date:         03/09/2017
 * @version         1.0
 * History Log:  03/09/2017
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class TrainerGame extends javax.swing.JDialog {
    private final int MAX = 14; //maximum exclusive value for a card
    private final int MIN = 0; //minimum exclusive value for a card
    String[] greeting = {"Welcome to the Training Game"," ", "Enter 4 card numbers", "1 - 13, Then click", 
        "Show Solutions for ", "All the Solutions."};

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * Method           TrainerGame()
     * Description     Builds form and adds affects
     * @author         Mel Leggett
     * Date            03/09/2017
     * @param parent this
     * @param modal true
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  public TrainerGame(java.awt.Frame parent, boolean modal) 
  {
        super(parent, modal);
        //builds form
        initComponents();
        //sets form in center of screen
        this.setLocationRelativeTo(null);
        //sets close as active key (fire on Enter)
        this.getRootPane().setDefaultButton(showJButton);
        //sets title
        this.setTitle("Trainer Game");
        //sets icon on top of Menu
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/images/icon.png"));
        //set greeting in JList
        solJList.setListData(greeting);
        card1JTextField.requestFocus();
  }
  
  /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   * getSolutions
   * Description calls the Solutions class to search for all the solutions for the 4 card
   * value the user input and displays them for the user to see.
   * @param a card 1
   * @param b card 2
   * @param c card 3
   * @param d  card 4
   * date 03/09/2017
   *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  private void getSolutions(int a, int b, int c, int d) {
        ArrayList<String> solutions;
         //create new Deck of cards to get card values
        DeckOfCards deck = new DeckOfCards(a, b, c, d);
        Solutions sol;
        //assign cardvalues
        a = DeckOfCards.cardValue1;
        b = DeckOfCards.cardValue2;
        c = DeckOfCards.cardValue3;
        d = DeckOfCards.cardValue4;
        sol = new Solutions();
        solutions = sol.findSolutions(a, b, c, d);
        String[] answers = new String[solutions.size()+1];
        if(!solutions.isEmpty()) { //solutions found, load into String array to display in JList
            answers[0] = solutions.size() + " solutions were found:";
            for(int i = 0; i < solutions.size(); i++)
                answers[i+1] = solutions.get(i);
        }
        else { //no solutions found
            answers[0] = "No Solutions for this hand.";
        }
            solJList.setListData(answers);
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundJPanel = new javax.swing.JPanel();
        headingJLabel = new javax.swing.JLabel();
        solJScrollPane = new javax.swing.JScrollPane();
        solJList = new javax.swing.JList<>();
        inputJPanel = new javax.swing.JPanel();
        card1JLabel = new javax.swing.JLabel();
        card1JTextField = new javax.swing.JTextField();
        card2JLabel = new javax.swing.JLabel();
        card2JTextField = new javax.swing.JTextField();
        card3JLabel = new javax.swing.JLabel();
        card3JTextField = new javax.swing.JTextField();
        card4JLabel = new javax.swing.JLabel();
        card4JTextField = new javax.swing.JTextField();
        buttonJPanel = new javax.swing.JPanel();
        showJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        helpJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();
        titleJMenuBar = new javax.swing.JMenuBar();
        menuJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        helpJMenuItem = new javax.swing.JMenuItem();
        quitJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        backgroundJPanel.setBackground(new java.awt.Color(153, 204, 255));

        headingJLabel.setFont(new java.awt.Font("MV Boli", 0, 28)); // NOI18N
        headingJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingJLabel.setText("Trainer Game:");

        solJList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        solJList.setToolTipText("Solutions to input hand");
        solJScrollPane.setViewportView(solJList);

        inputJPanel.setBackground(new java.awt.Color(153, 204, 255));
        inputJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inputJPanel.setLayout(new java.awt.GridLayout(2, 4));

        card1JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        card1JLabel.setText("Card 1: ");
        inputJPanel.add(card1JLabel);

        card1JTextField.setToolTipText("Input Card Value");
        inputJPanel.add(card1JTextField);

        card2JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        card2JLabel.setText("Card 2: ");
        inputJPanel.add(card2JLabel);

        card2JTextField.setToolTipText("Input Card Value");
        inputJPanel.add(card2JTextField);

        card3JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        card3JLabel.setText("Card 3:");
        inputJPanel.add(card3JLabel);

        card3JTextField.setToolTipText("Input Card Value");
        inputJPanel.add(card3JTextField);

        card4JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        card4JLabel.setText("Card 4:");
        inputJPanel.add(card4JLabel);

        card4JTextField.setToolTipText("Input Card Value");
        inputJPanel.add(card4JTextField);

        buttonJPanel.setBackground(new java.awt.Color(153, 204, 255));
        buttonJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        buttonJPanel.setLayout(new java.awt.GridLayout(2, 2));

        showJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        showJButton.setMnemonic('s');
        showJButton.setText("Show Solutions");
        showJButton.setToolTipText("Show solutions for your cards");
        showJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        showJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(showJButton);

        clearJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        clearJButton.setMnemonic('c');
        clearJButton.setText("Clear");
        clearJButton.setToolTipText("Clear the Cards");
        clearJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(clearJButton);

        helpJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        helpJButton.setMnemonic('h');
        helpJButton.setText("Help");
        helpJButton.setToolTipText("Get information for game");
        helpJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        helpJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(helpJButton);

        quitJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.setToolTipText("Exit Game");
        quitJButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(quitJButton);

        javax.swing.GroupLayout backgroundJPanelLayout = new javax.swing.GroupLayout(backgroundJPanel);
        backgroundJPanel.setLayout(backgroundJPanelLayout);
        backgroundJPanelLayout.setHorizontalGroup(
            backgroundJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addComponent(inputJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addComponent(headingJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(solJScrollPane))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundJPanelLayout.setVerticalGroup(
            backgroundJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundJPanelLayout.createSequentialGroup()
                .addComponent(headingJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuJMenu.setMnemonic('m');
        menuJMenu.setText("Menu");
        menuJMenu.setToolTipText("");

        clearJMenuItem.setMnemonic('c');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.setToolTipText("clear fields");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        menuJMenu.add(clearJMenuItem);

        helpJMenuItem.setMnemonic('h');
        helpJMenuItem.setText("Help");
        helpJMenuItem.setToolTipText("Rules for Training Game");
        helpJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpJMenuItemActionPerformed(evt);
            }
        });
        menuJMenu.add(helpJMenuItem);

        quitJMenuItem.setMnemonic('Q');
        quitJMenuItem.setText("Quit");
        quitJMenuItem.setToolTipText("Exit Training Game");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        menuJMenu.add(quitJMenuItem);

        titleJMenuBar.add(menuJMenu);

        setJMenuBar(titleJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * showJButtonActionPerformed
     * Description takes in the 4 values the user entered for the cards, verifies they aren't
     * blank and within the accepted range and then proceeds to getSolutions method to find solutions
     * @param evt showJButton click
     * date 03/09/2017
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void showJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showJButtonActionPerformed
        solJList.removeAll(); //clear JList
        try {
            int a = Integer.valueOf(card1JTextField.getText());
            int b = Integer.valueOf(card2JTextField.getText());
            int c = Integer.valueOf(card3JTextField.getText());
            int d = Integer.valueOf(card4JTextField.getText());
            //ensure all cards are in range then proceed
            if((a < MAX && a > MIN) && (b < MAX && b > MIN) &&
                    (c < MAX && c > MIN) && (d < MAX && d > MIN)) {
                getSolutions(--a,--b,--c,--d);
            }
            else 
                throw new NumberFormatException(); //warn of invalid input
        }
        catch(NumberFormatException ex) { //warn of invalid input
            Exceptions.trainerNumberException();
        }
    }//GEN-LAST:event_showJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * helpJButtonActionPerformed
     * displays a brief rules of how TrainerGame works
     * @param evt helpJButton click
     * 03/09/2017
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void helpJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpJButtonActionPerformed
        helpJMenuItem.doClick();
    }//GEN-LAST:event_helpJButtonActionPerformed

    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        this.dispose(); //exits Trainer game
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * helpJMenuItemActionPerformed
     * displays a brief rules of how TrainerGame works
     * @param evt helpJMenuItem click
     * 03/09/2017
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void helpJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpJMenuItemActionPerformed
        JOptionPane.showMessageDialog(null, "Enter 4 numbers (1-13) for the value of the simulated"
                + " cards dealt. \nThen hit Show Solutions Button to display all possible solutions for this"
                + "game.","Game Rules",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * clearJMenuItemActionPerformed
     * resets the inputs and list for a new entry
     * @param evt clearJMenuItem clicked
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJMenuItemActionPerformed
        //reset the JList
        solJList.setListData(greeting);
       //clear card inputs
        card1JTextField.setText("");
       card2JTextField.setText("");
       card3JTextField.setText("");
       card4JTextField.setText("");
       card1JTextField.requestFocus();
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * clearJButtonActionPerformed
     * resets the inputs and list for a new entry
     * @param evt clearJButton clicked
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJButtonActionPerformed
        clearJMenuItem.doClick();
    }//GEN-LAST:event_clearJButtonActionPerformed

    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJButtonActionPerformed
        quitJMenuItem.doClick(); //quits TrainerGame
    }//GEN-LAST:event_quitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundJPanel;
    private javax.swing.JPanel buttonJPanel;
    private javax.swing.JLabel card1JLabel;
    private javax.swing.JTextField card1JTextField;
    private javax.swing.JLabel card2JLabel;
    private javax.swing.JTextField card2JTextField;
    private javax.swing.JLabel card3JLabel;
    private javax.swing.JTextField card3JTextField;
    private javax.swing.JLabel card4JLabel;
    private javax.swing.JTextField card4JTextField;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JButton helpJButton;
    private javax.swing.JMenuItem helpJMenuItem;
    private javax.swing.JPanel inputJPanel;
    private javax.swing.JMenu menuJMenu;
    private javax.swing.JButton quitJButton;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JButton showJButton;
    private javax.swing.JList<String> solJList;
    private javax.swing.JScrollPane solJScrollPane;
    private javax.swing.JMenuBar titleJMenuBar;
    // End of variables declaration//GEN-END:variables
}
